@page "/messages/{PostID:int?}"

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage

@inject IUserService UserService
@inject IPostService PostService
@inject IUserStatusService UserStatus

<PageTitle>你的消息</PageTitle>

<div class="d-flex">
    <!-- vertical message navbar -->
    <div class="overflow-y-scroll pe-0 vh-100">
        <div class="list-group p-1">
            @if (!_hasPost)
            {
                <div class="text-info">您还没有参加过组队，不试一试嘛❤</div>
            }
            else if (_myPosts is null)
            {
                <LoadingSpinner />
            }
            else
            {
                @foreach (var post in _myPosts)
                {
                    if (post.PostID == PostID)
                    {
                        <MessageNavbar Post="@post" IsActive="@true" />
                    }
                    else
                    {
                        <MessageNavbar Post="@post" IsActive="@false" />
                    }
                }
            }
        </div>
    </div>
    <!-- message tabs -->
    <div class="container-fluid vh-100 ps-2 pe-1 flex-grow-1">
        @if (_selectedPost is null)
        {
            <p>选择任意对话开始浏览</p>
        }
        else
        {
            <MessageDetail Post="@_selectedPost" />
        }
    </div>
</div>

@code {
    [Parameter]
    public int? PostID { get; set; }

    private bool _hasPost = true;
    private IEnumerable<Post>? _myPosts;
    private Post? _selectedPost;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var userLoginResult = await SessionStorage.GetAsync<int>(UserStatus.SessionStorageKey);

        if (!userLoginResult.Success)
        {
            _hasPost = false;
            return;
        }

        IEnumerable<int>? myPostIDs = await UserService.GetUserJoinedPostIDsAsync(userLoginResult.Value);
        if (myPostIDs is null || !myPostIDs.Any())
        {
            _hasPost = false;
            return;
        }

        _myPosts = await PostService.GetPostsAsync(myPostIDs);

        if (PostID is not null && _myPosts is not null)
        {
            _selectedPost = (
                from post in _myPosts
                where post.PostID == PostID
                select post
            ).First();
        }

        StateHasChanged();
    }
}
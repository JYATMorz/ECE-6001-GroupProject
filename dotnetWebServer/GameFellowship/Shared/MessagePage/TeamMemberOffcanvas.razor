@inject IUserService UserService

<div class="offcanvas offcanvas-end w-25" tabindex="-1" id="teamMemberOffcanvas"
    aria-labelledby="teamMemberOffcanvasLabel">
    <div class="offcanvas-header border-bottom border-dark-subtle">
        <h5 class="offcanvas-title" id="teamMemberOffcanvasLabel">Team Members</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <!-- User Icons -->
        <div class="h-100 p-2 d-flex flex-column gap-2 overflow-y-auto border border-info-subtle rounded-4">
            <!-- User Icon -->
            @if (currentUsers is null)
            {
                <LoadingSpinner />
            }
            else
            {
                @foreach (var user in currentUsers)
                {
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary">
                            <div class="d-flex justify-content-evenly align-items-center gap-1">
                                <img class="rounded-circle" src="@user.Value" alt="User" width="40" height="40">
                                <div class="fs-6 fw-bold text-break">@user.Key</div>
                            </div>
                        </button>
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><button class="dropdown-item" type="button">加入黑名单</button></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><button class="dropdown-item" type="button">添加好友</button></li>
                        </ul>
                    </div>
                }
                @for (int i = 0; i < (Total - Current); i++)
                {
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary">
                            <div class="d-flex justify-content-evenly align-items-center gap-1">
                                <i class="bi bi-person-bounding-box" style="font-size: 1.5rem;"></i>
                                <div class="fs-6 fw-bold text-break">暂缺</div>
                            </div>
                        </button>
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split"
                            data-bs-toggle="dropdown" aria-expanded="false" disabled>
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><button class="dropdown-item" type="button">加入黑名单</button></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><button class="dropdown-item" type="button">添加好友</button></li>
                        </ul>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public HashSet<int> JoinedUserIDs { get; set; } = new();
    [Parameter, EditorRequired]
    public int Total { get; set; }
    [Parameter, EditorRequired]
    public int Current { get; set; }

    private Dictionary<string, string>? currentUsers;

    protected override async Task OnParametersSetAsync()
    {
        currentUsers = await UserService.GetUserGroupNameIconPairAsync(JoinedUserIDs);
    }
}
@inject IGameService GameService

<a class="list-group-item list-group-item-action @(IsActive ? _active : string.Empty)" href=@("messages/" + Post.PostID)>
    <div class="d-inline-flex gap-2 flex-wrap align-items-end">
        @if (_gameIcon is null)
        {
            <div style="height: 40px;">@Post.GameName</div>
        }
        else
        {
            <img class="rounded-3" src="@_gameIcon" alt="GameIcon" width="40" height="40">
        }
        <div class="fs-4">@Post.GameName</div>
    </div>
    <div class="border-top border-bottom border-dark-subtle py-1">
        <div>@Post.MatchType</div>
        <div><i class="bi bi-file-person-fill"></i>: @Post.CurrentPeople / @Post.TotalPeople</div>
    </div>
    <small class="text-muted">上次更新 @((DateTime.Now - Post.LastUpdate).TotalMinutes.ToString("F0")) 前 ...</small>
    <!-- TODO: New Message Notification -->
    <div class="m-1 badge text-bg-danger rounded-pill">有新消息！</div>
</a>

@code {
    [Parameter, EditorRequired]
    public Post Post { get; set; } = new Post();
    [Parameter]
    public bool IsActive { get; set; } = false;

    private string _active = "active";

    private string? _gameIcon;

    protected override async Task OnParametersSetAsync()
    {
        _gameIcon = await GameService.GetGameIconAsync(Post.GameName);
    }
}
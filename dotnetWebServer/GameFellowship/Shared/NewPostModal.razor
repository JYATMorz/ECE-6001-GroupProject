@using GameFellowship.Data
@inject GameService GameService
@inject PostService PostService
@inject NavigationManager Navigation

<div class="modal fade" id="teamCreateModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="teamCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-2 me-3" id="teamCreateModalLabel">编辑新帖子</h1>
                <small class="fst-italic text-muted pt-1">寻找您的队伍 !</small>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm id="newPostForm" Model="@newPost" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <!-- FIXME: Game Name @bind="SearchGameName" @bind:event="oninput" @onchange="OnGameNameChangeAsync" -->
                <div>
                    <label class="fs-4 fw-bold mb-1" for="postGameName">
                        游戏名<i class="bi bi-joystick mx-2"></i>
                    </label>
					<InputText id="postGameName" class="form-control w-50" list="gameNameOptions"
                        placeholder="输入或搜索 ..." @bind-Value="newPost.GameName" />
                    <ValidationMessage For="() => newPost.GameName" />
                    <datalist id="gameNameOptions">
                        @if (gameNamesList is not null)
                        {
                            <DataListOptions DataList="@gameNamesList" />
                        }
                    </datalist>
                </div>
                <!-- TODO: Match Type -->
                <div class="mt-2">
                    <label class="fs-4 fw-bold mb-1" for="postMatchType">
                        游戏类型<i class="bi bi-boxes mx-2"></i>
                    </label>
					<InputText id="postMatchType" class="form-control w-50" list="matchTypeOptions"
		                placeholder="输入或搜索 ..." @bind-Value="newPost.MatchType" />
                    <ValidationMessage For="() => newPost.MatchType" />
                    <datalist id="matchTypeOptions">
                        @if (gameTypesList is not null)
                        {
                            <DataListOptions DataList="@gameTypesList" />
                        }
                    </datalist>
                </div>
                <!-- Team's Number -->
                <div class="d-inline-flex flex-wrap mt-2 column-gap-4">
                    <div class="row">
                        <label class="col-form-label col-form-label-sm col-sm-auto fs-4 fw-bold"
                            for="postTotalPeople">需要人数: <i class="bi bi-person-fill mx-2"></i></label>
                        <div class="col-sm-auto align-self-center">
                            <InputNumber id="postTotalPeople" class="form-control form-control-sm"
                                @bind-Value="newPost.TotalPeople" min="0"/>
                        </div>
                    </div>
                    <div class="vr"></div>
                    <div class="row">
                        <label class="col-form-label col-form-label-sm col-sm-auto fs-4 fw-bold"
                            for="postCurrentPeople">当前人数: <i class="bi bi-person-check-fill mx-2"></i></label>
                        <div class="col-sm-auto align-self-center">
                            <InputNumber id="postCurrentPeople" class="form-control form-control-sm"
                                @bind-Value="newPost.CurrentPeople" min="0"/>
                        </div>
                    </div>
                    <ValidationMessage For="() => newPost.TotalPeople" />
                    <ValidationMessage For="() => newPost.CurrentPeople" />
                    @if(newPost.TotalPeople < newPost.CurrentPeople)
                    {
                        <div class="validation-message">当前人数大于需要人数，已经塞不下了❤</div>
                    }
                </div>
                <!-- Requirements -->
                <div class="mt-2">
                    <label class="fs-4 fw-bold mb-1" for="createRequirementAdd">条件<i
                            class="bi bi-card-checklist mx-2"></i></label>
                    <div class="d-flex gap-2">
                        <PillRequirements @bind-Requirements="newPost.Requirements"/>
                    </div>
                        @if (newPost.Requirements.Length > 5)
                        {
                            <div class="validation-message">队伍要求请少于等于5个捏</div>
                        }
                        @if (newPost.Requirements.Length < 1)
                        {
                            <div class="validation-message">至少提1个队伍要求</div>
                        }
                    </div>
                <!-- TODO: Game Date -->
                <div class="mt-2">
                    <div class="fs-4 fw-bold mb-1">日期<i class="bi bi-calendar-check mx-2"></i></div>
                    <div class="m-2">
                        <InputRadioGroup class="form-check form-check-inline" @bind-Value="newPost.PlayNow" >
                            <InputRadio id="postPlaNow" class="form-check-input" Value="@true" />
                            <label class="form-check-label" for="postPlaNow">立刻马上</label>
                            <InputRadio id="postPlaLate" class="form-check-input" Value="@false" />
                            <label class="form-check-label" for="postPlaLate">下次一定</label>
                        </InputRadioGroup>
                    </div>
                    <div class="collapse @(newPost.PlayNow ? "" : "show")" id="gameDateCollapse">
                        <div class="d-inline-flex gap-2 p-2 border border-dark-subtle rounded-3 align-items-center">
                            <div class="row">
                                <label class="col-form-label col-form-label-sm col-sm-auto"
                                    for="gameDateStart">从:</label>
                                <div class="col-sm-auto">
                                    <input class="form-control form-control-sm" type="date" name="gameDatePeriod"
                                        id="gameDateStart">
                                </div>
                                <label class="col-form-label col-form-label-sm col-sm-auto"
                                    for="gameTimeStart">的:</label>
                                <div class="col-sm-auto">
                                    <input class="form-control form-control-sm" type="time" name="gameDatePeriod"
                                        id="gameTimeStart">
                                </div>
                            </div>
                            <div class="vr"></div>
                            <div class="row">
                                <label class="col-form-label col-form-label-sm col-sm-auto"
                                    for="gameDateEnd">到:</label>
                                <div class="col-sm-auto">
                                    <input class="form-control form-control-sm" type="date" name="gameDatePeriod"
                                        id="gameDateEnd">
                                </div>
                                <label class="col-form-label col-form-label-sm col-sm-auto"
                                    for="gameTimeEnd">的:</label>
                                <div class="col-sm-auto">
                                    <input class="form-control form-control-sm" type="time" name="gameDatePeriod"
                                        id="gameTimeEnd">
                                </div>
                            </div>
                        </div>
                        <ValidationMessage For="() => newPost.StartDate" />
                        <ValidationMessage For="() => newPost.EndDate" />
                        @if (newPost.StartDate < newPost.EndDate)
                        {
                            <div class="validation-message">开始日期不能晚于结束日期</div>
                        }
                    </div>
                </div>
                <!-- TODO: Audio Chat Panel -->
                <div class="mt-2">
                    <div class="fs-4 fw-bold mb-1">语音<i class="bi bi-mic-fill mx-2"></i></div>
                    <div class="form-check form-switch m-2">
                        <InputCheckbox class="form-check-input" id="postAudioChat" @bind-Value="newPost.AudioChat" />
                        <label class="form-check-label" for="postAudioChat">需要语音</label>
                    </div>
                    <div class="collapse @(newPost.AudioChat ? "show" : "")" id="audioChatCollapse">
                        <div class="p-2 border border-dark-subtle rounded-3">
                            <div class="row ps-2">
                                <label class="col-form-label col-auto" for="postAudioName">语音平台: </label>
                                <InputText class="form-control col-auto w-25" id="postAudioName" list="audioChatNames"
                                    placeholder="输入或搜索 ..." @bind-Value="newPost.AudioPlatform" />
                                <!-- FIXME: Datalist Options -->
                                <datalist id="audioChatNames">
                                    <option value="Discord" />
                                    <option value="KOOK" />
                                    <option value="WeChat" />
                                    <option value="YY" />
                                </datalist>
                            </div>
                            <hr>
                            <div class="row ps-2">
                                <label class="col-form-label col-auto" for="postAudioLink">语音链接 : </label>
                                <InputText class="form-control col-auto w-75" id="postAudioLink"
                                    placeholder="语音链接或神秘代码 ..." @bind-Value="newPost.AudioLink" />
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Other Description -->
                <div class="mt-2">
                    <label class="fs-4 fw-bold mb-1" for="postOtherText">其他要求<i
                            class="bi bi-card-text mx-2"></i></label>
                    <div class="form-floating">
                        <InputTextArea class="form-control w-100 rounded-3" id="postOtherText"
                            placeholder="请简短描述 ..." @bind-Value="newPost.Description" />
                        <label for="createOtherText">请简短描述 ...</label>
                    </div>
                </div>
            </EditForm>
            </div>
            <div class="modal-footer justify-content-end">
                <div>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
                    <button type="submit" form="newPostForm" class="btn btn-primary">创建</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? GameName { get; set; }

    private PostModel newPost = new();
    private EditContext? editContext;

    // FIXME: Not working now
    private string? SearchGameName
    {
        get => newPost.GameName;
        set
        {
            newPost.GameName = value;
            OnGameNameInputAsync();
        }
    }

    private int _showTopResult = 5;
    private string[]? gameNamesList;
    private string[]? gameTypesList;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        editContext = new(newPost);
        editContext.SetFieldCssClassProvider(new CustomFieldClassProvider());
    }

    protected override async Task OnParametersSetAsync()
    {
        newPost.GameName = GameName;
        gameNamesList = await GameService.GetGameNameTopAsync(_showTopResult, newPost.GameName);
        gameTypesList = await PostService.GetMatchTypesAsync(_showTopResult, newPost.GameName);
    }

    private async void OnGameNameInputAsync()
    {
        gameNamesList = await GameService.GetGameNameTopAsync(_showTopResult, newPost.GameName);
    }

    private async void OnGameNameChangeAsync()
    {
        gameTypesList = await PostService.GetMatchTypesAsync(_showTopResult, newPost.GameName);
    }

    private void HandleValidSubmit()
    {
        // FIXME: Do my extre validation here
        Console.WriteLine(newPost.Requirements.Length);


        // Reload the page
        Navigation.NavigateTo(Navigation.Uri, true);
    }
}